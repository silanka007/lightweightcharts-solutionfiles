{"version":3,"sources":["App.js","index.js"],"names":["App","chartRef","useRef","fetchedData","useEffect","chart","createChart","current","width","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","localization","dateFormat","lineSeries","addLineSeries","subscribe","ws","WebSocket","onopen","send","JSON","stringify","onmessage","e","value","parse","data","type","push","time","parseInt","Date","getTime","parseFloat","price","setData","remove","close","className","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAoFeA,MA7Ef,WACE,IAAMC,EAAWC,iBAAO,MAElBC,EAAc,GA+DpB,OA1DAC,qBAAU,WAER,IAAMC,EAAQC,YAAYL,EAASM,QAAS,CAC1CC,MAAOP,EAASO,MAClBC,OAAQR,EAASQ,OACfC,OAAQ,CACJC,gBAAiB,UACjBC,UAAW,uBAEfC,KAAM,CACFC,UAAW,CACPC,MAAO,4BAEXC,UAAW,CACPD,MAAO,6BAGfE,aAAc,CACZC,WAAY,gBAIZC,EAAad,EAAMe,gBAEjBC,EAAY,CACd,KAAQ,YACR,SAAY,CACR,SACA,YACA,CACI,KAAQ,SACR,YAAe,CACX,cAKVC,EAAK,IAAIC,UAAU,kCAczB,OAbAD,EAAGE,OAAS,WACVF,EAAGG,KAAKC,KAAKC,UAAUN,KAEzBC,EAAGM,UAAY,SAAAC,GACb,IAAMC,EAAQJ,KAAKK,MAAMF,EAAEG,MACT,WAAfF,EAAMG,OAIT9B,EAAY+B,KAAK,CAACC,KAAMC,SAAS,IAAIC,KAAKP,EAAMK,MAAMG,WAAYR,MAAOS,WAAWT,EAAMU,SAC1FrB,EAAWsB,QAAQtC,KAGd,WACLE,EAAMqC,SACNpB,EAAGqB,WAEJ,CAACxC,IAIF,yBAAKyC,UAAU,OACb,4BAAQA,UAAU,cAAlB,wBAGA,yBAAKA,UAAU,QAAQC,IAAK5C,MCzElC6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ea72d3f7.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nimport './App.css';\n\n\n\nfunction App() {\n  const chartRef = useRef(null);\n\n  const fetchedData = [];\n  // const chart = createChart(document.body, { width: 400, height: 300 });\n\n\n\n  useEffect(() =>{\n\n    const chart = createChart(chartRef.current, {\n      width: chartRef.width,\n    height: chartRef.height,\n      layout: {\n          backgroundColor: '#ffffff',\n          textColor: 'rgba(33, 56, 77, 1)',\n      },\n      grid: {\n          vertLines: {\n              color: 'rgba(197, 203, 206, 0.7)',\n          },\n          horzLines: {\n              color: 'rgba(197, 203, 206, 0.7)',\n          },\n      },\n      localization: {\n        dateFormat: 'yyyy/MM/dd',\n      },\n  });\n\n  const lineSeries = chart.addLineSeries();\n\n    const subscribe = {\n        \"type\": \"subscribe\",\n        \"channels\": [\n            \"level2\",\n            \"heartbeat\",\n            {\n                \"name\": \"ticker\",\n                \"product_ids\": [\n                    \"BTC-USD\",\n                ]\n            }\n        ]\n    }\n    const ws = new WebSocket('wss://ws-feed.pro.coinbase.com');\n    ws.onopen = () => {\n      ws.send(JSON.stringify(subscribe))\n    }\n    ws.onmessage = e => {\n      const value = JSON.parse(e.data);\n      if(value.type !== 'ticker'){\n        return;\n      }\n\n      fetchedData.push({time: parseInt(new Date(value.time).getTime()), value: parseFloat(value.price)});\n      lineSeries.setData(fetchedData)\n    }\n\n    return () => {\n      chart.remove();\n      ws.close()\n    }\n  }, [fetchedData]);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        BTC-USD Crypto Chart\n      </header>\n      <div className='chart' ref={chartRef}></div>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}